
services:
    db:
        image: postgres:latest
        environment:
            POSTGRES_DB: ${DB_TITLE}
            POSRGRES_USER: ${DB_USER_NAME}
            POSTGRES_PASSWORD: ${DB_USER_PASSWORD}
        ports: 
            - ${DB_PORT}:5432
        restart: always
        networks:
            - teldir-web
        volumes:
            - db-volume:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U ${DB_USER_NAME} -d ${DB_TITLE}"]
            interval: 10s
            retries: 5
            start_period: 30s
            timeout: 10s
    backend:
        build: 
            context: ./backend
            dockerfile: Dockerfile
        env_file:
            - .env
        ports: 
            - ${BACKEND_PORT}:4001
        restart: always
        networks:
            - teldir-web
        depends_on:
             db:
                condition: service_healthy
                restart: true
    frontend:
        build: 
            context: ./frontend/frontend
            dockerfile: Dockerfile
        env_file:
            - .env
        ports: 
            - ${FRONTEND_PORT}:4002
        restart: always
        networks:
            - teldir-web
        depends_on:
            - backend
    nginx:
        build: 
            context: ./nginx
            dockerfile: Dockerfile
        env_file:
            - .env
        ports:
            - "${NGINX_PORT}:${NGINX_PORT}"
        depends_on:
            - backend
            - frontend
        networks:
            - teldir-web


volumes:
    db-volume:
        driver: local

networks:
    teldir-web:
        driver: bridge